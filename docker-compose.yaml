version: "3.9"
services:
  dotnet-mvc-movie:
    build: 
      context: ./MvcMovie
      dockerfile: ./Dockerfile
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - 7186:80
    env_file:
      - ./dev.env

  dotnet-bookstore-api:
    build: 
      context: ./BookStoreApi
      dockerfile: ./Dockerfile
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
      - ./BookStoreApi:/opt/BookStoreApi
    ports:
      - 5088:80
    networks:
      - MONGO
    env_file:
      - ./dev.env
    depends_on:
      - mongo-backend
  mongo-backend:
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - db-data1:/data/db
    networks:
      - MONGO
    env_file:
      - ./dev.env

  mongo-express:
    image: mongo-express
    ports:
      - 8050:8081
    depends_on:
      - mongo-backend
    networks:
      - MONGO
    env_file:
      - ./dev.env

  postgres-backend:
    image: postgres
    volumes:
      - ./sampleDb:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    networks:
      - POSTGRES
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: fluffy
    # psql --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" < demo-small-en-20170815.sql 
    
  postgres-adminer:
    image: adminer
    networks:
      - POSTGRES
    ports:
      - 8080:8080
    
volumes:
  db-data1:

networks:
  MONGO:
    name: MONGO
  POSTGRES:
    name: POSTGRES
