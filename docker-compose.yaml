version: "3.9"
services:

  ## Web Apps
  webapp-mvc-movie:
    build: 
      context: ./webapp-mvc-movie
      dockerfile: ./Dockerfile
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - 3010:80
    env_file:
      - ./dev.env

  ## API Services
  api-bookstore:
    build: 
      context: ./api-bookstore
      dockerfile: ./Dockerfile
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
      - ./BookStoreApi:/opt/BookStoreApi
    ports:
      - 3011:80
    networks:
      - MONGO
    env_file:
      - ./dev.env
    depends_on:
      - mongo-backend
  
  ## DB Services
  backend-mongo:
    image: mongo
    ports:
      - 27018:27017
    volumes:
      - db-data1:/data/db
    networks:
      - MONGO
    env_file:
      - ./dev.env

  backend-postgres:
    image: postgres
    volumes:
      - ./local/sampleDb:/data-import
    ports:
      - 5432:5432
    networks:
      - POSTGRES
    env_file:
      - ./dev.env
    # psql --username "$POSTGRES_USER" < demo-small-en-20170815.sql 
  
  ## DB Admin Utils
  admin-mongo:
    image: mongo-express
    ports:
      - 3020:8081
    depends_on:
      - mongo-backend
    networks:
      - MONGO
    env_file:
      - ./dev.env
  
  admin-postgres:
    image: adminer
    networks:
      - POSTGRES
    ports:
      - 3021:8080
    
volumes:
  db-data1:

networks:
  MONGO:
    name: MONGO
  POSTGRES:
    name: POSTGRES
